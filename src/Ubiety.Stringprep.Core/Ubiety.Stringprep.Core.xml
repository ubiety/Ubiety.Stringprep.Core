<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ubiety.Stringprep.Core</name>
    </assembly>
    <members>
        <member name="T:Ubiety.Stringprep.Core.Bidirectional.BidirectionalStep">
            <summary>
                Bidirectional stringprep step.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Bidirectional.BidirectionalStep.#ctor(Ubiety.Stringprep.Core.IValueRangeTable,Ubiety.Stringprep.Core.IValueRangeTable,Ubiety.Stringprep.Core.IValueRangeTable)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Bidirectional.BidirectionalStep" /> class.
            </summary>
            <param name="prohibitedTable">Prohibited character table.</param>
            <param name="ralTable">RandAL character table.</param>
            <param name="lTable">L character table.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Bidirectional.BidirectionalStep.Run(System.String)">
            <summary>
                Run the stringprep step.
            </summary>
            <param name="input">Input to run the step on.</param>
            <returns>String parsed for unicode characters.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.Bidirectional.BidirectionalTables">
            <summary>
                Bidirectional value tables.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Bidirectional.BidirectionalTables.D1">
            <summary>
                Characters with bidirectional property 'R' or 'AL'.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Bidirectional.BidirectionalTables.RorAL">
            <summary>
                Table D.1 Characters with bidirectional property 'R' or 'AL'.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Bidirectional.BidirectionalTables.D2">
            <summary>
                Characters with bidirectional property 'L'.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Bidirectional.BidirectionalTables.L">
            <summary>
                Table D.2 Characters with bidirectional property 'L'.
            </summary>
        </member>
        <member name="T:Ubiety.Stringprep.Core.CompositeMappingTable">
            <summary>
                Composite mapping table.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.CompositeMappingTable.#ctor(System.Collections.Generic.ICollection{Ubiety.Stringprep.Core.IMappingTable})">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.CompositeMappingTable" /> class.
            </summary>
            <param name="mappingTables">Mapping tables.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.CompositeMappingTable.HasReplacement(System.Int32)">
            <summary>
                Does the value have a replacement.
            </summary>
            <param name="value">Value to find replacement for.</param>
            <returns>A value indicating whether there is a replacement or not.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.CompositeMappingTable.GetReplacement(System.Int32)">
            <summary>
                Gets the replacement for the value.
            </summary>
            <param name="value">Value to get the replacement for.</param>
            <returns>Replacement for the value.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.DictionaryMappingTable">
            <summary>
                Dictionary mapping table.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.DictionaryMappingTable.#ctor(System.Collections.Generic.IDictionary{System.Int32,System.Int32[]})">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.DictionaryMappingTable" /> class.
            </summary>
            <param name="values">Mapping values.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.DictionaryMappingTable.HasReplacement(System.Int32)">
            <summary>
                Does the value have a replacement.
            </summary>
            <param name="value">Value to replace.</param>
            <returns>A value indicating whether or not it can be replaced.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.DictionaryMappingTable.GetReplacement(System.Int32)">
            <summary>
                Gets the replacement value.
            </summary>
            <param name="value">Value to replace.</param>
            <returns>Replacement value.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.Exceptions.BidirectionalFormatException">
            <summary>
                Bidirectional format exception.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Exceptions.BidirectionalFormatException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Exceptions.BidirectionalFormatException" /> class.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Exceptions.BidirectionalFormatException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Exceptions.BidirectionalFormatException" /> class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Exceptions.BidirectionalFormatException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Exceptions.BidirectionalFormatException" /> class.
            </summary>
            <param name="message">Exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Exceptions.BidirectionalFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Exceptions.BidirectionalFormatException" /> class.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException">
            <summary>
                Prohibited value exception.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException"/> class.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException.#ctor(System.Char)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException"/> class.
            </summary>
            <param name="prohibited">Character that is prohibited.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException"/> class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException"/> class.
            </summary>
            <param name="message">Exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException"/> class.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Ubiety.Stringprep.Core.Generated.Tables">
            <summary>
               Stringprep code tables.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.A1">
            <summary>
                A.1 Unassigned code points in Unicode 3.2.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.B1">
            <summary>
                B.1 Commonly mapped to nothing.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.B2">
            <summary>
                B.2 Mapping for case-folding used with NFKC.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.B3">
            <summary>
                B.3 Mapping for case-folding used with no normalization.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C11">
            <summary>
                C.1 Space characters.
            </summary>
            <summary>
                C.1.1 ASCII space characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C12">
            <summary>
                C.1.2 Non-ASCII space characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C21">
            <summary>
                C.2 Control characters.
            </summary>
            <summary>
                C.2.1 ASCII control characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C22">
            <summary>
                C.2.2 Non-ASCII control characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C3">
            <summary>
                C.3 Private use.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C4">
            <summary>
                C.4 Non-character code points.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C5">
            <summary>
                C.5 Surrogate codes.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C6">
            <summary>
                C.6 Inappropriate for plain text.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C7">
            <summary>
                C.7 Inappropriate for canonical representation.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C8">
            <summary>
                C.8 Change display properties or are deprecated.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.C9">
            <summary>
                C.9 Tagging characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.D1">
            <summary>
                D.1 Characters with bidirectional property "R" or "AL".
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Generated.Tables.D2">
            <summary>
                D.2 Characters with bidirectional property "L".
            </summary>
        </member>
        <member name="T:Ubiety.Stringprep.Core.IMappingTable">
            <summary>
                Mapping table interface.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IMappingTable.HasReplacement(System.Int32)">
            <summary>
                Does the value have a replacement.
            </summary>
            <param name="value">Value to replace.</param>
            <returns>A value indicating whether there is a replacement or not.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IMappingTable.GetReplacement(System.Int32)">
            <summary>
                Gets the value replacement.
            </summary>
            <param name="value">Value to replace.</param>
            <returns>Replacement value.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.IMappingTableBuilder">
            <summary>
                Mapping table builder interface.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IMappingTableBuilder.WithValueRangeTable(System.Int32[],System.Int32)">
            <summary>
                Builds a mapping with a value range.
            </summary>
            <param name="values">Values array.</param>
            <param name="replacement">Replacement value.</param>
            <returns>Mapping builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IMappingTableBuilder.WithValueRangeTable(System.Int32[],System.Int32[])">
            <summary>
                Builds a mapping with a value range.
            </summary>
            <param name="values">Values array.</param>
            <param name="replacement">Replacement array.</param>
            <returns>Mapping builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IMappingTableBuilder.WithMappingTable(System.Collections.Generic.IDictionary{System.Int32,System.Int32[]})">
            <summary>
                Builds a mapping with a mapping table.
            </summary>
            <param name="table">Mapping table.</param>
            <returns>Mapping builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IMappingTableBuilder.Include(System.Collections.Generic.IDictionary{System.Int32,System.Int32[]})">
            <summary>
                Includes a table in the current mapping.
            </summary>
            <param name="table">Table to include.</param>
            <returns>Mapping builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IMappingTableBuilder.Remove(System.Int32)">
            <summary>
                Removes a table from the mapping.
            </summary>
            <param name="removeValue">Integer position of the table.</param>
            <returns>Mapping builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IMappingTableBuilder.Compile">
            <summary>
                Compile the mapping.
            </summary>
            <returns>Mapping table.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.IPreparationProcess">
            <summary>
                Preparation process interface.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IPreparationProcess.Run(System.String)">
            <summary>
                Run the process.
            </summary>
            <param name="input">Process input.</param>
            <returns>Prepared string.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.IPreparationProcessBuilder">
            <summary>
                Preparation process builder interface.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IPreparationProcessBuilder.WithNormalizationStep">
            <summary>
                Add a normalization step to the process.
            </summary>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IPreparationProcessBuilder.WithNormalizationStep(System.Text.NormalizationForm)">
            <summary>
                Add a normalization step to the process.
            </summary>
            <param name="form">Normalization to use.</param>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IPreparationProcessBuilder.WithMappingStep(Ubiety.Stringprep.Core.IMappingTable)">
            <summary>
                Add a mapping step to the process.
            </summary>
            <param name="mappingTable">Mapping table to add.</param>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IPreparationProcessBuilder.WithProhibitedValueStep(Ubiety.Stringprep.Core.IValueRangeTable)">
            <summary>
                Add a prohibited value processing step.
            </summary>
            <param name="prohibitedTable">Prohibited value table.</param>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IPreparationProcessBuilder.WithBidirectionalStep">
            <summary>
                Add a bidirectional processing step.
            </summary>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IPreparationProcessBuilder.WithBidirectionalStep(Ubiety.Stringprep.Core.IValueRangeTable,Ubiety.Stringprep.Core.IValueRangeTable,Ubiety.Stringprep.Core.IValueRangeTable)">
            <summary>
                Add a bidirectional processing step.
            </summary>
            <param name="prohibited">Prohibited value table.</param>
            <param name="ral">RAL table.</param>
            <param name="l">L Table.</param>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IPreparationProcessBuilder.Compile">
            <summary>
                Compile the process.
            </summary>
            <returns>Compiled process instance.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.IValueRangeTable">
            <summary>
                Value range table interface.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IValueRangeTable.Contains(System.Int32)">
            <summary>
                Does the table contain the requested value.
            </summary>
            <param name="value">Value to search for.</param>
            <returns>true if the value is in the table; otherwise false.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.IValueRangeTableBuilder">
            <summary>
                Value range table builder.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IValueRangeTableBuilder.Include(System.Int32)">
            <summary>
                Include a value in the table.
            </summary>
            <param name="includeValue">Value to include.</param>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IValueRangeTableBuilder.IncludeRange(System.Int32,System.Int32)">
            <summary>
                Include a range of values in the table.
            </summary>
            <param name="start">Range start value.</param>
            <param name="end">Range end value.</param>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IValueRangeTableBuilder.Remove(System.Int32)">
            <summary>
                Remove a value from the table.
            </summary>
            <param name="removeValue">Value to remove.</param>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IValueRangeTableBuilder.RemoveRange(System.Int32,System.Int32)">
            <summary>
                Remove a range of values from the table.
            </summary>
            <param name="start">Range start value.</param>
            <param name="end">Range end value.</param>
            <returns>Builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.IValueRangeTableBuilder.Compile">
            <summary>
                Compile the value table.
            </summary>
            <returns>Compiled value table.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.Mapping">
            <summary>
                Value mapping.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Mapping.B1">
            <summary>
                Mapping table B.1.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Mapping.MappedToNothing">
            <summary>
                Mapped to nothing mapping table (B.1).
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Mapping.B2">
            <summary>
                Mapping table B.2.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Mapping.CaseFolding">
            <summary>
                Case folding mapping table (B.2).
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Mapping.B3">
            <summary>
                Mapping table B.3.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Mapping.CaseFoldingWithoutNormalization">
            <summary>
                Case folding without normalization mapping table (B.3).
            </summary>
        </member>
        <member name="T:Ubiety.Stringprep.Core.MappingStep">
            <summary>
                Mapping processing step.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingStep.#ctor(Ubiety.Stringprep.Core.IMappingTable)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.MappingStep"/> class.
            </summary>
            <param name="table">Mapping table to use for processing.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingStep.Run(System.String)">
            <summary>
                Run the step.
            </summary>
            <param name="input">String value to process.</param>
            <returns>string after processing.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.MappingTable">
            <summary>
                Mapping table.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTable.Create(System.Int32[],System.Int32)">
            <summary>
                Create a mapping table.
            </summary>
            <param name="valueTable">Array of values to replace.</param>
            <param name="replacement">Replacement value.</param>
            <returns>Mapping table instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTable.Create(System.Int32[],System.Int32[])">
            <summary>
                Create a mapping table.
            </summary>
            <param name="valueTable">Integer array of values to replace.</param>
            <param name="replacement">Integer array of replacement values.</param>
            <returns>Mapping table instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTable.Create(System.Collections.Generic.IDictionary{System.Int32,System.Int32[]}[])">
            <summary>
                Create a mapping table.
            </summary>
            <param name="baseTables">Tables to base off of.</param>
            <returns>Mapping table instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTable.Build(System.Int32[],System.Int32)">
            <summary>
                Build mapping table.
            </summary>
            <param name="valueTable">Table of values to replace.</param>
            <param name="replacement">Replacement value.</param>
            <returns>Mapping table builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTable.Build(System.Int32[],System.Int32[])">
            <summary>
                Build a mapping table.
            </summary>
            <param name="valueTable">Table of values to replace.</param>
            <param name="replacement">Table of replacement values.</param>
            <returns>Mapping table builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTable.Build(System.Collections.Generic.IDictionary{System.Int32,System.Int32[]}[])">
            <summary>
                Build a mapping table.
            </summary>
            <param name="baseTables">Value and replacement tables.</param>
            <returns>Mapping table builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTable.HasReplacement(System.Int32)">
            <summary>
                Does the value have a replacement.
            </summary>
            <param name="value">Value to search for.</param>
            <returns>true if replacement is available; otherwise false.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTable.GetReplacement(System.Int32)">
            <summary>
                Get the replacement value.
            </summary>
            <param name="value">Value to replace.</param>
            <returns>integer array of the replacement values.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.MappingTableBuilder">
            <summary>
                Mapping table builder.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTableBuilder.#ctor(System.Collections.Generic.IDictionary{System.Int32,System.Int32[]}[])">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.MappingTableBuilder"/> class.
            </summary>
            <param name="baseTables">Base value tables.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTableBuilder.WithValueRangeTable(System.Int32[],System.Int32)">
            <summary>
                Add value range table to mapping.
            </summary>
            <param name="values">Values to look for.</param>
            <param name="replacement">Replacement value.</param>
            <returns>Mapping table builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTableBuilder.WithValueRangeTable(System.Int32[],System.Int32[])">
            <summary>
                Add value range table to mapping.
            </summary>
            <param name="values">Values to look for.</param>
            <param name="replacement">Replacement values.</param>
            <returns>Mapping table builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTableBuilder.WithMappingTable(System.Collections.Generic.IDictionary{System.Int32,System.Int32[]})">
            <summary>
                Add mapping table.
            </summary>
            <param name="table">Table to add.</param>
            <returns>Mapping table builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTableBuilder.Include(System.Collections.Generic.IDictionary{System.Int32,System.Int32[]})">
            <summary>
                Add values to be included.
            </summary>
            <param name="table">Table of values to be included.</param>
            <returns>Mapping table builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTableBuilder.Remove(System.Int32)">
            <summary>
                Value to removed.
            </summary>
            <param name="removeValue">Value to remove.</param>
            <returns>Mapping table builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTableBuilder.Compile">
            <summary>
                Compile mapping table.
            </summary>
            <returns>Mapping table instance.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when no tables are provided.</exception>
        </member>
        <member name="T:Ubiety.Stringprep.Core.MappingTableCompiler">
            <summary>
                Mapping table compiler.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.MappingTableCompiler.Compile(System.Collections.Generic.IDictionary{System.Int32,System.Int32[]}[],System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.Int32,System.Int32[]}},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
                Compiles the mapping table.
            </summary>
            <param name="baseTables">Base value tables.</param>
            <param name="inclusions">Table of values to include.</param>
            <param name="removals">Values to remove.</param>
            <returns>Table of values.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.NormalizationStep">
            <summary>
                Normalization step.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.NormalizationStep.#ctor(System.Text.NormalizationForm)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.NormalizationStep"/> class.
            </summary>
            <param name="normalizationForm">Normalization form to use.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.NormalizationStep.Run(System.String)">
            <summary>
                Run the step.
            </summary>
            <param name="input">String to run step on.</param>
            <returns>Normalized string.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.PreparationProcess">
            <summary>
                Preparation process.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcess.#ctor(System.Collections.Generic.IList{Ubiety.Stringprep.Core.IPreparationProcess})">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.PreparationProcess"/> class.
            </summary>
            <param name="steps">Steps to use for the process.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcess.Build">
            <summary>
                Start building a process.
            </summary>
            <returns>Preparation process builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcess.Run(System.String)">
            <summary>
                Run all of the steps in the process.
            </summary>
            <param name="input">String input to use for the process.</param>
            <returns>Processed unicode string.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.PreparationProcessBuilder">
            <summary>
                Preparation process builder.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcessBuilder.WithBidirectionalStep">
            <summary>
                Add bidirectional step.
            </summary>
            <returns>Preparation process builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcessBuilder.WithBidirectionalStep(Ubiety.Stringprep.Core.IValueRangeTable,Ubiety.Stringprep.Core.IValueRangeTable,Ubiety.Stringprep.Core.IValueRangeTable)">
            <summary>
                Add bidirectional step.
            </summary>
            <param name="prohibited">Prohibited character table.</param>
            <param name="ral">R or AL character table.</param>
            <param name="l">L character table.</param>
            <returns>Preparation process builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcessBuilder.WithMappingStep(Ubiety.Stringprep.Core.IMappingTable)">
            <summary>
                Add mapping step.
            </summary>
            <param name="mappingTable">Mapping table.</param>
            <returns>Preparation process builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcessBuilder.WithNormalizationStep">
            <summary>
                Add normalization step with default form KC.
            </summary>
            <returns>Preparation process builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcessBuilder.WithNormalizationStep(System.Text.NormalizationForm)">
            <summary>
                Add normalization step.
            </summary>
            <param name="form">Normalization form.</param>
            <returns>Preparation process builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcessBuilder.WithProhibitedValueStep(Ubiety.Stringprep.Core.IValueRangeTable)">
            <summary>
                Add prohibited value step.
            </summary>
            <param name="prohibitedTable">Prohibited character table.</param>
            <returns>Preparation process builder.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.PreparationProcessBuilder.Compile">
            <summary>
                Compile preparation process.
            </summary>
            <returns>Preparation process.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.Prohibited">
            <summary>
                Prohibited value tables.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C11">
            <summary>
                Table C1.1 ASCII space characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.ASCIISpaceCharacters">
            <summary>
                Table C1.1 ASCII space characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C12">
            <summary>
                Table C1.2 Non ASCII space characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.NonASCIISpaceCharacters">
            <summary>
                Table C1.2 Non ASCII space characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C21">
            <summary>
                Table C2.1 ASCII control characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.ASCIIControlCharacters">
            <summary>
                Table C2.1 ASCII control characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C22">
            <summary>
                Table C2.2 Non ASCII control characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.NonASCIIControlCharacters">
            <summary>
                Table C2.2 Non ASCII control characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C3">
            <summary>
                Table C3 Private use characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.PrivateUseCharacters">
            <summary>
                Table C3 Private use characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C4">
            <summary>
                Table C4 Non character code points.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.NonCharacterCodePoints">
            <summary>
                Table C4 Non character code points.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C5">
            <summary>
                Table C5 Surrogate code points.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.SurrogateCodePoints">
            <summary>
                Table C5 Surrogate code points.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C6">
            <summary>
                Table C6 Inappropriate for plain text.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.InappropriateForPlainText">
            <summary>
                Table C6 Inappropriate for plain text.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C7">
            <summary>
                Table C7 Inappropriate for canonical representation.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.InappropriateForCanonicalRepresentation">
            <summary>
                Table C7 Inappropriate for canonical representation.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C8">
            <summary>
                Table C8 Change display properties or deprecated.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.ChangeDisplayPropertiesOrDeprecated">
            <summary>
                Table C8 Change display properties or deprecated.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.C9">
            <summary>
                Table C9 Tagging characters.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Prohibited.TaggingCharacters">
            <summary>
                Table C9 Tagging characters.
            </summary>
        </member>
        <member name="T:Ubiety.Stringprep.Core.ProhibitedValueStep">
            <summary>
                Step that defines a prohibited value.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ProhibitedValueStep.#ctor(Ubiety.Stringprep.Core.IValueRangeTable)">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.ProhibitedValueStep"/> class.
            </summary>
            <param name="table">Table of prohibited values.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ProhibitedValueStep.Run(System.String)">
            <summary>
                Executes the step.
            </summary>
            <param name="input">Data to compare against.</param>
            <returns>Data if not prohibited.</returns>
            <exception cref="T:Ubiety.Stringprep.Core.Exceptions.ProhibitedValueException">Thrown when input is prohibited.</exception>
        </member>
        <member name="T:Ubiety.Stringprep.Core.Unassigned">
            <summary>
                Unassigned character codes.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Unassigned.A1">
            <summary>
                Table A1 Unassigned code points.
            </summary>
        </member>
        <member name="F:Ubiety.Stringprep.Core.Unassigned.UnassignedCodePoints">
            <summary>
                Table A1 Unassigned code points.
            </summary>
        </member>
        <member name="T:Ubiety.Stringprep.Core.ValueRangeCompiler">
            <summary>
                Value range compiler.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeCompiler.Compile(System.Collections.Generic.List{System.Int32}[],System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32})">
            <summary>
                Compile tables.
            </summary>
            <param name="baseTables">Base character tables.</param>
            <param name="inclusions">Inclusion tables.</param>
            <param name="removals">Removal values.</param>
            <returns>Compiled table.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.ValueRangeMappingTable">
            <summary>
                Value range mapping table.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeMappingTable.#ctor(Ubiety.Stringprep.Core.IValueRangeTable,System.Int32[])">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.ValueRangeMappingTable"/> class.
            </summary>
            <param name="valueRange">Value range table.</param>
            <param name="replacement">Replacement table.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeMappingTable.HasReplacement(System.Int32)">
            <summary>
                Does the value have a replacement.
            </summary>
            <param name="value">Value to look for.</param>
            <returns>True if value is in table, otherwise false.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeMappingTable.GetReplacement(System.Int32)">
            <summary>
                Get the replacement value.
            </summary>
            <param name="value">Value to replace.</param>
            <returns>Replacement values.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.ValueRangeTable">
            <summary>
                Value range table.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTable.#ctor(System.Int32[])">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.ValueRangeTable"/> class.
            </summary>
            <param name="valueRanges">Value range table.</param>
            <exception cref="T:System.ArgumentException">Thrown if not a valid table.</exception>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTable.Create(System.Collections.Generic.List{System.Int32}[])">
            <summary>
                Create a range table.
            </summary>
            <param name="baseTables">Value tables.</param>
            <returns>Value range table.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTable.Build(System.Collections.Generic.List{System.Int32}[])">
            <summary>
                Build range table.
            </summary>
            <param name="baseTables">Value tables.</param>
            <returns>Value range table builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTable.Contains(System.Int32)">
            <summary>
                Does the table contain the value.
            </summary>
            <param name="value">Value to look up.</param>
            <returns>True if the value is in the table, otherwise false.</returns>
        </member>
        <member name="T:Ubiety.Stringprep.Core.ValueRangeTableBuilder">
            <summary>
                Value range table builder.
            </summary>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTableBuilder.#ctor(System.Collections.Generic.List{System.Int32}[])">
            <summary>
                Initializes a new instance of the <see cref="T:Ubiety.Stringprep.Core.ValueRangeTableBuilder"/> class.
            </summary>
            <param name="baseTables">Value tables.</param>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTableBuilder.Include(System.Int32)">
            <summary>
                Values to include in the tables.
            </summary>
            <param name="includeValue">Value to include.</param>
            <returns>Value range table builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTableBuilder.IncludeRange(System.Int32,System.Int32)">
            <summary>
                Include range in the tables.
            </summary>
            <param name="start">Start value of the range.</param>
            <param name="end">End value of the range.</param>
            <returns>Value range table builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTableBuilder.Remove(System.Int32)">
            <summary>
                Add removal value.
            </summary>
            <param name="removeValue">Value to remove.</param>
            <returns>Value range builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTableBuilder.RemoveRange(System.Int32,System.Int32)">
            <summary>
                Add removal range.
            </summary>
            <param name="start">Start of range.</param>
            <param name="end">End of range.</param>
            <returns>Value range builder instance.</returns>
        </member>
        <member name="M:Ubiety.Stringprep.Core.ValueRangeTableBuilder.Compile">
            <summary>
                Compile value range table.
            </summary>
            <returns>Value range table instance.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if no tables are provided.</exception>
        </member>
    </members>
</doc>
